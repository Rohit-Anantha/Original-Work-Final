/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.ism;

import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLEncoder;
import java.nio.Buffer;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
import javax.swing.tree.TreePath;
import org.apache.commons.codec.digest.DigestUtils;

/**
 *
 * @author rohit
 */
public class frame extends javax.swing.JFrame {

    /**
     * Creates new form frame
     */
    public frame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passwordTab = new javax.swing.JTabbedPane();
        self_Protect = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Email_Test = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        emailBox = new javax.swing.JFormattedTextField();
        findBreaches = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        breachesBox = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        breachName = new javax.swing.JFormattedTextField();
        AboutBreach = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jep = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        passwordFind = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        passwordBox = new javax.swing.JTextArea();
        PasswordField = new javax.swing.JPasswordField();
        Sources = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        Menu_Bar = new javax.swing.JMenuBar();
        Menu_File = new javax.swing.JMenu();
        exit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Protecting the Innocent");

        passwordTab.setFocusable(false);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Protect your passwords from cyber \ncriminals, since thatâ€™s what they care \nabout most.");
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(549, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(434, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout self_ProtectLayout = new javax.swing.GroupLayout(self_Protect);
        self_Protect.setLayout(self_ProtectLayout);
        self_ProtectLayout.setHorizontalGroup(
            self_ProtectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        self_ProtectLayout.setVerticalGroup(
            self_ProtectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        passwordTab.addTab("What can I do to protect myself?", self_Protect);

        jLabel1.setText("Enter your email:");

        emailBox.setText("rohitanantha11@gmail.com");
        emailBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailBoxActionPerformed(evt);
            }
        });

        findBreaches.setText("Find Breaches");
        findBreaches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findBreachesActionPerformed(evt);
            }
        });

        breachesBox.setColumns(20);
        breachesBox.setRows(5);
        breachesBox.setText("Breaches appear here!");
        jScrollPane2.setViewportView(breachesBox);

        jLabel2.setText("Find out more about a breach:");
        jLabel2.setToolTipText("");

        breachName.setText("breachName");
        breachName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breachNameActionPerformed(evt);
            }
        });

        AboutBreach.setText("About Breach");
        AboutBreach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutBreachActionPerformed(evt);
            }
        });

        jep.setEditable(false);
        jep.setContentType("text/html"); // NOI18N
        jep.setText("<HTML>  <p>In May 2019 the graphic design tool website <a href=https://support.canva.com/contact/customer-support/may-24-security-incident-faqs/ target=\\_blank\\ rel=\\noopener\\>Canva suffered a data breach</a> that impacted 137 million subscribers. The exposed data included email addresses usernames names cities of residence and passwords stored as bcrypt hashes for users not using social logins. The data was provided to HIBP by a source who requested it be attributed to \\JimScott.Sec@protonmail.com\\.</p>  </HTML>  ");
        jep.setToolTipText("");
        jep.addHyperlinkListener(new HyperlinkListener() {
            @Override
            public void hyperlinkUpdate(HyperlinkEvent hle) {
                if (HyperlinkEvent.EventType.ACTIVATED.equals(hle.getEventType())) {
                    System.out.println(hle.getURL());
                    Desktop desktop = Desktop.getDesktop();
                    try {
                        desktop.browse(hle.getURL().toURI());
                    } catch (IOException | URISyntaxException ex) {
                    }
                }
            }
        });
        jScrollPane6.setViewportView(jep);

        javax.swing.GroupLayout Email_TestLayout = new javax.swing.GroupLayout(Email_Test);
        Email_Test.setLayout(Email_TestLayout);
        Email_TestLayout.setHorizontalGroup(
            Email_TestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Email_TestLayout.createSequentialGroup()
                .addGroup(Email_TestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Email_TestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(Email_TestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Email_TestLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(breachName, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(AboutBreach, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Email_TestLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(emailBox, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(findBreaches, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)))
                    .addGroup(Email_TestLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(299, Short.MAX_VALUE))
        );
        Email_TestLayout.setVerticalGroup(
            Email_TestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Email_TestLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Email_TestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findBreaches))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(Email_TestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(breachName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AboutBreach))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addGap(139, 139, 139))
        );

        passwordTab.addTab("Test your Email!", Email_Test);

        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPanel1KeyTyped(evt);
            }
        });

        jLabel3.setText("Enter your password:");

        passwordFind.setText("See if you have been compromised!");
        passwordFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFindActionPerformed(evt);
            }
        });
        passwordFind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordFindKeyTyped(evt);
            }
        });

        passwordBox.setColumns(20);
        passwordBox.setRows(5);
        passwordBox.setText("Breaches appear here!");
        jScrollPane4.setViewportView(passwordBox);

        PasswordField.setText("jPasswordField1");
        PasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(passwordFind)))
                .addContainerGap(196, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordFind)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(331, Short.MAX_VALUE))
        );

        passwordTab.addTab("Test your Password!", jPanel1);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Sources");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Email Checker");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("FirefoxMonitor");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Password Checker");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Wordlists");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Networks");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("ShieldsUP!");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout SourcesLayout = new javax.swing.GroupLayout(Sources);
        Sources.setLayout(SourcesLayout);
        SourcesLayout.setHorizontalGroup(
            SourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SourcesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SourcesLayout.setVerticalGroup(
            SourcesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SourcesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(372, Short.MAX_VALUE))
        );

        passwordTab.addTab("Sources", Sources);

        Menu_File.setText("File");

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        Menu_File.add(exit);

        Menu_Bar.add(Menu_File);

        setJMenuBar(Menu_Bar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(passwordTab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(passwordTab)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged

        TreePath selectionPath = jTree1.getSelectionPath();
        Object lastPathComponent[] = selectionPath.getPath();
        Object last = (lastPathComponent[lastPathComponent.length - 1]);

        if (last.toString().equalsIgnoreCase("firefoxmonitor")) {
            URI url = null;

            try {
                url = new URI("https://monitor.firefox.com/");
            } catch (URISyntaxException ex) {
                Logger.getLogger(frame.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                Desktop.getDesktop().browse(url);
            } catch (IOException ex) {
                Logger.getLogger(frame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        /*File f = new File();

        Desktop.open()*/
    }//GEN-LAST:event_jTree1ValueChanged

    private void emailBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailBoxActionPerformed


    private void findBreachesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findBreachesActionPerformed
        try {
            String email = encodeValue(emailBox.getText());

            String pre = "https://haveibeenpwned.com/api/v3/breachedaccount/" + email;

            URL url = null;
            url = new URL(pre);

            HttpURLConnection con = null;
            con = (HttpURLConnection) url.openConnection();

            con.setRequestMethod("GET");

            con.setRequestProperty("hibp-api-key", "f347a278e84340ffac8b63441b5a2d15");

            con.connect();

            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
            String inputLine;
            StringBuffer content = new StringBuffer();
            String s = "";
            while ((inputLine = in.readLine()) != null) {
                content.append(inputLine);
                s += inputLine;

            }
            in.close();

            s = s.replace(",", "\n");
            s = s.replace("\"", "");
            s = s.replace("{", "");
            s = s.replace("}", "");
            s = s.replace("[", "");
            s = s.replace("]", "");
            s = s.replace("(", "");
            s = s.replace(")", "");

            breachesBox.setText(s);

        } catch (IOException ex) {
            Logger.getLogger(frame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_findBreachesActionPerformed

    private void breachNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breachNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_breachNameActionPerformed

    private void AboutBreachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutBreachActionPerformed
        try {
            String breach = encodeValue(breachName.getText());

            String pre = "https://haveibeenpwned.com/api/v3/breach/" + breach;

            URL url = null;
            url = new URL(pre);

            HttpURLConnection con = null;
            con = (HttpURLConnection) url.openConnection();

            con.setRequestMethod("GET");

            con.setRequestProperty("hibp-api-key", "f347a278e84340ffac8b63441b5a2d15");

            con.connect();

            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
            String inputLine;
            String s = "";
            while ((inputLine = in.readLine()) != null) {
                if (inputLine.contains("Title:")) {

                }
                s += inputLine;

            }
            in.close();

            s = s.replace(",", "\n");
            s = s.replace("\"", "");
            s = s.replace("{", "");
            s = s.replace("}", "");
            s = s.replace("[", "");
            s = s.replace("]", "");
            s = s.replace("(", "");
            s = s.replace(")", "");

            //aboutBreachBox.setText(s);

        } catch (IOException ex) {
            Logger.getLogger(frame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_AboutBreachActionPerformed


    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void passwordFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFindActionPerformed
        try {
            String unencryptedPass = PasswordField.getText();
            String encryptedPass = sha_1(unencryptedPass);

            String pre = "https://api.pwnedpasswords.com/range/" + encryptedPass.substring(0, 5);

            URL url = null;
            url = new URL(pre);

            HttpURLConnection con = null;
            con = (HttpURLConnection) url.openConnection();

            con.setRequestMethod("GET");

            con.setRequestProperty("hibp-api-key", "f347a278e84340ffac8b63441b5a2d15");

            con.connect();

            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
            String inputLine;
            String s = "";
            while ((inputLine = in.readLine()) != null) {
               if (inputLine.contains(encryptedPass.substring(6).toUpperCase())) {

                    s += inputLine + "\n";
               }

            }
            in.close();
            
            String [] name = s.split("");
            
            String ret = "";
            
            boolean found = false;
            for (int i = 0; i < name.length; i++) {
                if(found)
                {
                    ret += name[i];
                }
                else if(name[i].equals(":"))
                {
                    found = true;
                }
            }
            
            System.out.println(s);
            passwordBox.setText(ret);

        } catch (MalformedURLException ex) {
            Logger.getLogger(frame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ProtocolException ex) {
            Logger.getLogger(frame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_passwordFindActionPerformed

    //encrypt to sha-1
    public static String sha_1(String input) {
        /*try {
        // getInstance() method is called with algorithm SHA-1
        MessageDigest md = MessageDigest.getInstance("SHA-1");
        
        // digest() method is called
        // to calculate message digest of the input string
        // returned as array of byte
        byte[] messageDigest = md.digest(input.getBytes());
        
        // Convert byte array into signum representation
        BigInteger no = new BigInteger(1, messageDigest);
        
        // Convert message digest into hex value
        String hashtext = no.toString(16);
        
        // Add preceding 0s to make it 32 bit
        while (hashtext.length() < 32) {
        hashtext = "0" + hashtext;
        }
        
        // return the HashText
        return hashtext;
        } // For specifying wrong message digest algorithms
        catch (NoSuchAlgorithmException e) {
        throw new RuntimeException(e);
        }*/
        return DigestUtils.sha1Hex(input);
    }

    private void PasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordFieldActionPerformed

    private void passwordFindKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFindKeyTyped
        
    }//GEN-LAST:event_passwordFindKeyTyped

    private void jPanel1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyTyped
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            System.out.println("enter");
        }
    }//GEN-LAST:event_jPanel1KeyTyped

    public static String encodeValue(String value) {

        try {
            return URLEncoder.encode(value, StandardCharsets.UTF_8.toString());
        } catch (UnsupportedEncodingException ex) {
            throw new RuntimeException(ex.getCause());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static ArrayList<String> files;

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        files = new ArrayList<>();
        files.add("FirefoxMonitor");
        files.add("ShieldsUp");
        files.add("HIBP");

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AboutBreach;
    private javax.swing.JPanel Email_Test;
    private javax.swing.JMenuBar Menu_Bar;
    private javax.swing.JMenu Menu_File;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JPanel Sources;
    private javax.swing.JFormattedTextField breachName;
    private javax.swing.JTextArea breachesBox;
    private javax.swing.JFormattedTextField emailBox;
    private javax.swing.JMenuItem exit;
    private javax.swing.JButton findBreaches;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTree jTree1;
    private javax.swing.JEditorPane jep;
    private javax.swing.JTextArea passwordBox;
    private javax.swing.JButton passwordFind;
    private javax.swing.JTabbedPane passwordTab;
    private javax.swing.JPanel self_Protect;
    // End of variables declaration//GEN-END:variables
}
